name: Pipeline
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.*"
      - name: Build server
        run: |
          cd Server
          dotnet build --configuration Release
      - name: Build client
        run: |
          cd Client
          dotnet build --configuration Release
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.*"
      - name: Run
        run: |
          cd Tests
          dotnet test --configuration Release
  deploy:
    env:
      REGISTRY: ghcr.io
      
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    # Только на ветке main
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta for server
        id: meta_server
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-server

      - name: Build and push server
        uses: docker/build-push-action@v5
        with:
          context: ./Server/
          push: true
          tags: ${{ steps.meta_server.outputs.tags }}
          labels: ${{ steps.meta_server.outputs.labels }}
  
      - name: Docker meta for client
        id: meta_client
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-client

      - name: Build and push client
        uses: docker/build-push-action@v5
        with:
          context: ./Client
          push: true
          tags: ${{ steps.meta_client.outputs.tags }}
          labels: ${{ steps.meta_client.outputs.labels }}